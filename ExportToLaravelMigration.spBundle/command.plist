<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>author</key>
	<string>Colin Viebrock</string>
	<key>category</key>
	<string>Export</string>
	<key>command</key>
	<string>
# set up some functions
clear_temp ()
{
	rm -f "$SP_QUERY_RESULT_FILE"
	rm -f "$SP_QUERY_FILE"
	rm -f "$SP_QUERY_RESULT_STATUS_FILE"
}

execute_sql()
{
	# execute the SQL statement; the result will be available in the file $SP_QUERY_RESULT_FILE
	open "sequelpro://$SP_PROCESS_ID@passToDoc/ExecuteQuery"

	# wait for Sequel Pro; status file will be written to disk if query was finished
	while [ 1 ]
	do
		[[ -e "$SP_QUERY_RESULT_STATUS_FILE" ]] &amp;&amp; break
		sleep 0.01
	done

	# check for errors
	if [ `cat $SP_QUERY_RESULT_STATUS_FILE` == 1 ]; then
		echo "Query error."
		exit $SP_BUNDLE_EXIT_SHOW_AS_HTML_TOOLTIP
	fi
}

# start clean
clear_temp

# Check if one table is selected
if [ -z "$SP_SELECTED_TABLES" ]; then
	echo "&lt;font color=red&gt;Please select a table.&lt;/font&gt;"
	exit $SP_BUNDLE_EXIT_SHOW_AS_HTML_TOOLTIP
fi

# Split by tab
IFS=$'\t'
read -r -a tables &lt;&lt;&lt; "$SP_SELECTED_TABLES"

# Loop through tables
for table in "${tables[@]}"
do

	# get the table structure, including field comments
	echo "
	SELECT 
		COLUMN_NAME, COLUMN_TYPE, IS_NULLABLE, COLUMN_KEY, COLUMN_DEFAULT, EXTRA, COLUMN_COMMENT
	FROM 
		information_schema.COLUMNS
	WHERE
		TABLE_SCHEMA = '${SP_SELECTED_DATABASE}'
	AND
		TABLE_NAME = '${table}';" &gt; "$SP_QUERY_FILE"

	# execute and save the table structure result
	execute_sql
	cp $SP_QUERY_RESULT_FILE "$SP_BUNDLE_PATH/rowsStructure.tsv"

	clear_temp

	# send SHOW INDEXES query to Sequel Pro
	echo "SHOW INDEXES FROM `${table}`" &gt; "$SP_QUERY_FILE"

	# execute and save the SHOW INDEXES result
	execute_sql
	cp $SP_QUERY_RESULT_FILE "$SP_BUNDLE_PATH/rowsKeys.tsv"

	clear_temp

	# check if CONSTRAINTS exists
	echo "
	SELECT count(kcu.CONSTRAINT_NAME)
	FROM
		information_schema.REFERENTIAL_CONSTRAINTS rc
	LEFT JOIN
		information_schema.KEY_COLUMN_USAGE kcu
	ON
		(rc.CONSTRAINT_NAME=kcu.CONSTRAINT_NAME)
	WHERE
		kcu.CONSTRAINT_SCHEMA = '${SP_SELECTED_DATABASE}'
	AND
		 rc.TABLE_NAME = '${table}';" &gt; "$SP_QUERY_FILE"

	# check for errors
	execute_sql

	if [ `cat $SP_QUERY_RESULT_STATUS_FILE` &gt; 0 ]; then
		clear_temp

		# send CONSTRAINTS query to Sequel Pro
		echo "
		SELECT
			kcu.CONSTRAINT_NAME, kcu.COLUMN_NAME, kcu.REFERENCED_TABLE_NAME, kcu.REFERENCED_COLUMN_NAME, rc.UPDATE_RULE, rc.DELETE_RULE
		FROM
			information_schema.REFERENTIAL_CONSTRAINTS rc
		LEFT JOIN
			information_schema.KEY_COLUMN_USAGE kcu
		ON
			(rc.CONSTRAINT_NAME=kcu.CONSTRAINT_NAME)
		WHERE
			kcu.CONSTRAINT_SCHEMA = '${SP_SELECTED_DATABASE}'
		AND
			 rc.TABLE_NAME = '${table}';" &gt; "$SP_QUERY_FILE"

		# save the CONSTRAINTS result
		execute_sql
		cp $SP_QUERY_RESULT_FILE "$SP_BUNDLE_PATH/rowsConstraints.tsv"
	else
		echo -n "" &gt; "$SP_BUNDLE_PATH/rowsConstraints.tsv"
	fi

	# process the results and save to the desktop
	FILENAME=$(date "+%Y_%m_%d_%H%M%S_create_${table}_table.php")
	mkdir ~/Desktop/SequelProLaravelExport
	/usr/bin/php "$SP_BUNDLE_PATH/parse.php" "${table}" &gt; ~/Desktop/SequelProLaravelExport/$FILENAME
	echo "&lt;p&gt;Migration saved to &lt;strong&gt;~/Desktop/SequelProLaravelExport/$FILENAME.&lt;/strong&gt;&lt;/p&gt;"

	# clean up
	clear_temp

# end loop through tables
done
exit $SP_BUNDLE_EXIT_SHOW_AS_HTML
</string>
	<key>contact</key>
	<string>uggcf://tvguho.pbz/pivroebpx/RkcbegGbYneniryZvtengvba.fcOhaqyr</string>
	<key>description</key>
	<string>Exports the selected table(s) to Laravel migration files on the desktop.</string>
	<key>keyEquivalent</key>
	<string>^~@m</string>
	<key>name</key>
	<string>Export To Laravel Migration</string>
	<key>output</key>
	<string>showastexttooltip</string>
	<key>scope</key>
	<string>general</string>
	<key>tooltip</key>
	<string>Export the selected table(s) to Laravel migration file on the Desktop</string>
	<key>uuid</key>
	<string>BAAD749B-F050-4F02-879C-333B581D2E23</string>
</dict>
</plist>
